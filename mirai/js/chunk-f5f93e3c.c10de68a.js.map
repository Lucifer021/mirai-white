{"version":3,"sources":["webpack:///./src/api/mirai.js","webpack:///./src/views/mirai/vcl.vue?07e3","webpack:///src/views/mirai/vcl.vue","webpack:///./src/views/mirai/vcl.vue?e1d1","webpack:///./src/views/mirai/vcl.vue","webpack:///./src/views/mirai/vcl.vue?45cf"],"names":["getLanguage","request","url","method","getDateListData","time","headers","data","render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","staticClass","attrs","nativeOn","$event","handleRun","model","callback","$$v","runFlag","_v","length","_s","_e","dateList","index","ref","staticRenderFns","vclData","option","positionList","positionColors","timer","loading","computed","mounted","temporary","activated","console","log","$store","dispatch","changedPage","includes","showingName","map","ele","chartDom","resize","methods","getFromSon","getData","newData","sort","a","b","item","run","newIndex","oldData","forEach","numData","chart","setOption","insideIndex","num","clearInterval","getOption","tooltip","trigger","backgroundColor","axisPointer","type","label","precision","grid","left","right","bottom","top","containLabel","xAxis","boundaryGap","axisTick","show","yAxis","axisLabel","fontSize","color","series","ininChart","setInterval","component"],"mappings":"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","file":"js/chunk-f5f93e3c.c10de68a.js","sourcesContent":["import request from './request'\n\nexport function getLanguage() {\n  return request({\n    url: '/Language_Servlet',\n    method: 'get'\n  })\n}\nexport function getDateListData({\n  time = ['2020-03-30', '2020-03-31', '2020-04-01', '2020-04-02']\n}) {\n  return request({\n    url: '/CountryDate_Job_Servlet',\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    data: {\n      //暂时只有这四天的数据\n      time\n    }\n  })\n}\nexport function getTableData() {\n  request({\n    url: '/TableEnd_Servlet',\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8'\n    },\n    data: {\n      time: ['2020-03-30', '2020-03-31', '2020-04-01', '2020-04-02'],\n      location: {\n        level1: ['中国'],\n        level2: ['广东省', '广西省'],\n        level3: ['广州市']\n      },\n      position: '后端开发、测试、人工智能、移动前端开发'\n    }\n  })\n}\n\n// Test\n// request({\n//   url: '/CountryDate_Job_Servlet',\n//   method: 'post',\n//   headers: {\n//     'Content-Type': 'application/json;charset=UTF-8'\n//   },\n//   data: {\n//     time: ['2020-04-08', '2020-04-07', '2020-04-06', '2020-04-05'],\n//     location: {\n//       level1: ['中国'],\n//       level2: ['广东省', '广西省'],\n//       level3: ['广州市']\n//     },\n//     position: '后端开发、测试、人工智能、移动前端开发'\n//   }\n// })\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"vcl-container\"},[_c('el-switch',{staticClass:\"run\",attrs:{\"active-text\":\"开始\",\"inactive-text\":\"暂停\"},nativeOn:{\"click\":function($event){return _vm.handleRun($event)}},model:{value:(_vm.runFlag),callback:function ($$v) {_vm.runFlag=$$v},expression:\"runFlag\"}}),_c('div',{staticClass:\"title\"},[_c('p',{staticClass:\"sub-title\"},[_vm._v(\"截止至当前时间招聘最火热的职位是:\")]),(_vm.data.length != 0)?_c('p',[_vm._v(_vm._s(_vm.data[_vm.data.length - 1].name))]):_vm._e()]),_c('div',{staticClass:\"chart\"},[_c('p',{staticClass:\"time\"},[_vm._v(_vm._s(_vm.dateList[_vm.index]))]),_c('div',{ref:\"vcl\",staticClass:\"vcl\"})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div v-loading=\"loading\" class=\"vcl-container\">\n    <el-switch\n      v-model=\"runFlag\"\n      active-text=\"开始\"\n      inactive-text=\"暂停\"\n      class=\"run\"\n      @click.native=\"handleRun\"\n    >\n    </el-switch>\n    <div class=\"title\">\n      <p class=\"sub-title\">截止至当前时间招聘最火热的职位是:</p>\n      <p v-if=\"data.length != 0\">{{ data[data.length - 1].name }}</p>\n    </div>\n    <div class=\"chart\">\n      <p class=\"time\">{{ dateList[index] }}</p>\n      <div ref=\"vcl\" class=\"vcl\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getDateList, getDateBetween } from '@/utils/date'\n// require('./vcl-mock')\n// import mirai from '@/views/components/test-mock/vcl-mock'\nimport { mapGetters } from 'vuex'\nimport { getDateListData } from '@/api/mirai'\nexport default {\n  data() {\n    return {\n      vclData: [],\n      option: [],\n      index: 0,\n      data: [],\n      positionList: [],\n      positionColors: [], // 可合并，但太赶了下次再说\n      dateList: [],\n      timer: null,\n      runFlag: false,\n      loading: true\n    }\n  },\n  computed: {\n    ...mapGetters(['changedPage', 'showingName'])\n  },\n  mounted() {\n    /**\n     * 技术说明\n     * ---------------------------------------------------------------------------\n     * 1. 通过定时器每秒计算出相邻的两天数据的差值\n     * 2. 计算出的差值 / 10, 即每 100毫秒需要往图表添加更新的数据 (100毫秒动画看着流畅).每秒必须清空内部定时器(内部 insideIndex, insideTimer控制)\n     * 3. positionColors 用于存储每个职位对应的颜色,用于区分职位.当前颜色由随机函数生成\n     * 4. 柱状图 bar和 y轴颜色由 echart提供的 formatter / color的回调函数配合 positionColors.find 当前颜色生成\n     * 5. index用于控制当前展示的是哪天的日期数据\n     * 6. timer用于控制定时器的开关(暂停/开始功能)\n     * 7. 当日期到了最终数据后(即 index === data.length - 1), 清空定时器 timer,设置当前数据为请求数据的最后一项（确保精度问题）,重置按钮样式 runFlag\n     * 8. 根据按钮 runFlag的值来判断是 开始(true), 还是暂停(flag).如果 (index === data.length - 1), 重置 (index = 0)\n     * 9. { getDateList, getDateBetween }获取昨天到 2020-02-19 所有的 YY-MM-DD 日期数组, 提交到后端以获取数据\n     * ---------------------------------------------------------------------------\n     *\n     *\n     * 可增加的新功能\n     * +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n     * 1.后期可添加日期范围选择\n     * 2.根据日期数据搜索\n     * 3. 如果想 职位名称在 bar里面，value在 bar外面。可给每个 bar叠加一个 bar。一个 bar.label.position：'inside'。一个 bar.label.position: 'right'\n     * +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n     */\n    this.temporary()\n  },\n  activated() {\n    console.log('vcl upupup')\n    // this.ininChart()\n    this.$store.dispatch('getName', ['vcl'])\n    if (this.changedPage.includes('vcl')) {\n      this.$store.dispatch('getShowingName')\n      this.showingName.map((ele) => {\n        ele.chartDom.resize()\n      })\n      this.$store.dispatch('deleteChangePage', 'vcl')\n    }\n  },\n  methods: {\n    getFromSon(chartDom) {\n      this.$store.dispatch('setChartDOM', [\n        {\n          name: 'vcl',\n          chartDom: chartDom\n        }\n      ])\n      // console.log(this.chartDOM)\n    },\n    getData(dataIndex) {\n      // 获取索引的数据，用于更新图标数据\n      const newData = this.vclData.map((item) => {\n        return { name: item.name, value: item.data[dataIndex] }\n      })\n      // 图表数据排序\n      this.data = newData.sort(function(a, b) {\n        return a.value - b.value\n      })\n      // 图标 y轴名称随排序更换\n      this.positionList = this.data.map((item) => {\n        return item.name\n      })\n    },\n    run(chart, num) {\n      /**\n       * chart 图表 DOM元素\n       * num 每秒更新次数\n       */\n\n      // 旧数据(上一次的数据)\n      const oldData = this.data\n\n      // 每次 index自增\n      ++this.index\n\n      // 自增后的新数据\n      const newData = this.vclData.map((item) => {\n        return { name: item.name, value: item.data[this.index] }\n      })\n\n      // 计算出每秒(每天)新增各多少数据(与旧数据同样顺序)\n      const computeData = oldData.map((item, index) => {\n        // 按照旧数据的排序，重新获取新数据中对应旧数据第 index个的索引\n        const newIndex = newData.findIndex((el) => el.name === item.name)\n        return {\n          name: item.name,\n          value: newData[newIndex].value - oldData[index].value\n        }\n      })\n\n      // 每次更新 添加多少数据\n      const numData = computeData.map((item) => {\n        return { name: item.name, value: Math.round(item.value / num) }\n      })\n\n      // 设置内置定时器计数器\n      let insideIndex = 0\n      const timer = setInterval(() => {\n        // 旧数据中，每项的 value加 numData中对应的每项的 value（即速度）\n        oldData.forEach((item, index) => {\n          item.value += numData[index].value\n        })\n\n        // // ************************ Test Begin\n        // this.data = oldData\n\n        // this.data.sort(function(a, b) {\n        //   return a.value - b.value\n        // })\n        // // 获取对比后的(即更新后正确的排序) y轴的文本\n        // this.positionList = newData.map((item) => {\n        //   return item.name\n        // })\n        // // ************************ Test End\n\n        // 重新渲染图表，但不刷新 y轴文本的位置\n        this.option = this.getOption(this.positionList, oldData)\n        chart.setOption(this.option)\n        // 每次执行相加，内置定时器计数器 +1\n        insideIndex++\n        // 当计数器到达阈值时，重新更新图表为当前日期的最新数据并删除定时器\n        if (insideIndex === num) {\n          if (this.index === this.dateList.length - 1) {\n            // 重置开关且清除定时器\n            this.runFlag = false\n            clearInterval(this.timer)\n          }\n          clearInterval(timer)\n          // 给 数据从小到大排序\n          newData.sort(function(a, b) {\n            return a.value - b.value\n          })\n\n          this.data = newData\n\n          // 获取对比后的(即更新后正确的排序) y轴的文本\n          this.positionList = newData.map((item) => {\n            return item.name\n          })\n          /**\n           * 重新更新 Echart图表\n           * 因为上文计算的每次自增会存在精度不准确问题，因此在切换下一日期前，直接替换成新数据\n           */\n          this.option = this.getOption(this.positionList, newData)\n          chart.setOption(this.option)\n        }\n      }, 1000 / num)\n    },\n    getOption(positionList, data) {\n      return {\n        tooltip: {\n          trigger: 'axis',\n          backgroundColor: 'rgba(0,0,0,0.3)',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              precision: '0'\n            }\n          }\n        },\n        grid: {\n          left: '2%',\n          right: '2%',\n          bottom: '2%',\n          top: '2%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          boundaryGap: [0, 0.01],\n          axisTick: {\n            show: false\n          }\n        },\n        yAxis: {\n          // 没空弄了，下次再来填坑吧\n          show: false,\n          type: 'category',\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            fontSize: 18,\n            color: (params) => {\n              const name = params\n              const color = this.positionColors.find(\n                (item) => item.name === name\n              ).color\n              return color\n            }\n          },\n          data: positionList\n        },\n        series: [\n          {\n            name: this.dateList[0],\n            type: 'bar',\n            data: data,\n            barMaxWidth: 21,\n            label: {\n              show: true,\n              position: 'insideRight',\n              fontSize: 21,\n              offset: [0, -10],\n              formatter: function(params) {\n                const { name, value } = params\n                return `${name}: ${value} 条`\n              }\n            },\n            itemStyle: {\n              barBorderRadius: [0, 7, 7, 0],\n              color: (params) => {\n                const { name } = params\n                const color = this.positionColors.find(\n                  (item) => item.name === name\n                ).color\n                return color\n              }\n            }\n          }\n        ]\n      }\n    },\n    handleRun() {\n      if (this.index === this.dateList.length - 1) {\n        this.index = 0\n        this.ininChart()\n      }\n      if (this.runFlag) {\n        const chart = this.$echarts.init(this.$refs.vcl)\n        this.timer = setInterval(() => {\n          this.run(chart, 10)\n        }, 1000)\n      } else {\n        clearInterval(this.timer)\n      }\n    },\n    ininChart() {\n      // 获取昨天到 2020-02-19相隔多少天\n      const dateNum = getDateBetween('2020-02-19', getDateList())\n      // 获取昨天到 2020-02-19的日期\n      const dateList = getDateList(dateNum + 1).reverse()\n      this.dateList = dateList\n      /**\n       * 根据传入的索引获取对应索引（日期）的数据的函数\n       */\n      // 根据传入的索引获取对应索引（日期）的数据\n      this.getData(this.index)\n      const chart = this.$echarts.init(this.$refs.vcl)\n      this.positionColors = this.positionList.map((item) => {\n        const color = `rgb(${Math.round(Math.random() * 255)}, ${Math.round(\n          Math.random() * 255\n        )}, ${Math.round(Math.random() * 255)})`\n        return { name: item, color }\n      })\n      // 更新 option里的数据的函数\n      // 更新 option里的数据\n      this.option = this.getOption(this.positionList, this.data)\n      // 渲染图表\n      chart.setOption(this.option)\n      this.getFromSon(chart)\n    },\n    async temporary() {\n      // 获取昨天到 2020-03-30相隔多少天\n      const dateNum = getDateBetween('2020-02-19', getDateList())\n      // 获取昨天到 2020-03-30的日期\n      const dateList = getDateList(dateNum + 1).reverse()\n      const { data } = await getDateListData({ time: dateList })\n      this.loading = false\n      this.vclData = data\n      this.ininChart()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.vcl-container {\n  width: 100%;\n  height: 100%;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  .run {\n    position: absolute;\n    right: 20px;\n    top: 10px;\n  }\n  .title {\n    padding: 10px 20px;\n    font-size: 24px;\n    display: flex;\n    align-items: flex-end;\n    color: #606266;\n    .sub-title {\n      font-size: 20px;\n      color: #909399;\n      margin-right: 10px;\n    }\n  }\n  .chart {\n    flex: 1;\n    position: relative;\n    .vcl {\n      width: 100%;\n      height: 100%;\n    }\n    .time {\n      position: absolute;\n      right: 40px;\n      bottom: 50px;\n      font-size: 37px;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!./vcl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.1.0@babel-loader/lib/index.js!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!./vcl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./vcl.vue?vue&type=template&id=e62194fc&scoped=true&\"\nimport script from \"./vcl.vue?vue&type=script&lang=js&\"\nexport * from \"./vcl.vue?vue&type=script&lang=js&\"\nimport style0 from \"./vcl.vue?vue&type=style&index=0&id=e62194fc&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e62194fc\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/_css-loader@3.5.3@css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!./vcl.vue?vue&type=style&index=0&id=e62194fc&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.9.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/_css-loader@3.5.3@css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/_sass-loader@8.0.2@sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.9.2@vue-loader/lib/index.js??vue-loader-options!./vcl.vue?vue&type=style&index=0&id=e62194fc&lang=scss&scoped=true&\""],"sourceRoot":""}